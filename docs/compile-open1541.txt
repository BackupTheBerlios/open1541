
=======================================
= Compile and Start open1541 Firmware =
=======================================

by Thomas Giesel

Possibly you want to read linux-getting-started.txt or windows-getting-
started.txt to find out how to set up the build environment first.

Compile open1541
================

Now you should be able to compile the project. There are a few environment
variables which influence the make process, one of them is "add_path" which may
contain an additional directory to be added to PATH when invoking the ARM
compiler. If not set from the command line, it contains
$(HOME)/cross/arm-elf-binutils-<version>-gcc-<version>, which is the path were
our Makefile installs the toolchain.

On Windows there should ne reason to touch this variable. When you use the 
default installation of YAGARTO, the compiler is in the PATH already. 

So you can change to directory "make" and call:

> make -s

or

> add_path=somewhere/else/bin make -s




[this must be updated and completed]

2. Simulate using Skyeye
========================

Go to http://www.skyeye.org and download skyeye-1.2.7_rc1.tar.bz2. 
Unpack it using:

> tar xjf skyeye-1.2.7_rc1.tar.bz2

Then configure, make and install it using following commands:

> cd skyeye-1.2.7_rc1
> ./configure
> make
> sudo make install

If you get an error in nandflash/nandflash_smallblock.c:519, go to this line
and change "open(dev->dump, FILE_FLAG)" to 
"open(dev->dump, FILE_FLAG, S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP)".

Now you have a working skyeye which is able to emulate more or less of
an LPC213x controller.

Change to directory "open1541/make" and call:

> make simulate -s

This builds the skyeye configuration of the software and starts skyeye in the
current terminal window.

In the terminal window you should be able to access the UART interface of the
emulated device.

> make debug -s

This does the same and starts the Insight debugger additionally.

In Insight you must first invoke Run=>Connect to target. Choose GDBServer/TCP,
127.0.0.1 port 12345. Then you can click continue to get the stuff running.

3. Bring in on hardware
=======================

[this must be updated and completed]

open1541 comes with a tool called lpcflash which is used to send the software
over UART to the open1541 hardware. It is compiled automatically by our Makefile
when it is needed.

Connect the open1541 board to your computer. You can check the documention in
tools/lpcflash on details about how to do this. Connecting the reset line is not
necessarily needed, I never tested it.

To put your board into the boot loader mode, close the boot loader jumper and
reset it.

...
